<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD MAPPER 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reggie.mapper.EmployeeMapper">
    <select id="getByUsername" parameterType="java.lang.String" resultType="com.reggie.entity.Employee">
        select id,
               `name`,
               username,
               `password`,
               phone,
               sex,
               id_number,
               `status`,
               create_time,
               update_time,
               create_user,
               update_user
        from employee
        where username = #{username}
    </select>
    <insert id="save" parameterType="com.reggie.entity.Employee">
        insert into employee(`name`, username, `password`, phone, sex, id_number, `status`, create_time,
                             update_time,
                             create_user, update_user)
        values (#{name}, #{username}, #{password}, #{phone}, #{sex}, #{idNumber}, #{status}, #{createTime},
                #{updateTime}, #{createUser}, #{updateUser})
    </insert>

    <select id="getTotalByName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1)
        from employee
        <if test="name !=null and name!=''">
            where `name` like concat('%', #{name}, '%')
        </if>
    </select>

    <select id="getByNameWithPagination" parameterType="java.util.Map" resultType="com.reggie.entity.Employee">
        select id,
        `name`,
        username,
        phone,
        sex,
        id_number,
        `status`,
        create_time,
        update_time,
        create_user,
        update_user
        from employee
        <if test="name !=null and name!=''">
            where `name` like concat('%', #{name}, '%')
        </if>
        order by update_time desc
        limit #{start}, #{size}
    </select>
    <!--    <update id="updateStatusById" parameterType="com.reggie.entity.Employee">-->
    <!--        update employee-->
    <!--        set `status`    =#{status},-->
    <!--            update_time = #{updateTime},-->
    <!--            update_user = #{updateUser}-->
    <!--        where id = #{id}-->
    <!--    </update>-->
    <select id="getById" parameterType="java.lang.Long" resultType="com.reggie.entity.Employee">
        select id,
               `name`,
               username,
               phone,
               sex,
               id_number,
               `status`,
               create_time,
               update_time,
               create_user,
               update_user
        from employee
        where id = #{id}
    </select>
    <!--    实现更新非null值-->
    <update id="updateById" parameterType="com.reggie.entity.Employee">
        update employee
        set `name`      = coalesce(#{name}, `name`),
            username    = coalesce(#{username}, username),
            phone       = coalesce(#{phone}, phone),
            sex         = coalesce(#{sex}, sex),
            `status`    = coalesce(#{status}, `status`),
            update_time = coalesce(#{updateTime}, update_time),
            update_user = coalesce(#{updateUser}, update_user)
        where id = #{id}
    </update>
</mapper>